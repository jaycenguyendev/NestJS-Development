import { Injectable, Logger } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import * as nodemailer from 'nodemailer';

export interface EmailTemplate {
  subject: string;
  html: string;
  text: string;
}

export interface EmailOptions {
  to: string;
  subject: string;
  html: string;
  text?: string;
}

@Injectable()
export class EmailService {
  private readonly logger = new Logger(EmailService.name);
  private transporter: nodemailer.Transporter;

  constructor(private configService: ConfigService) {
    this.initializeTransporter();
  }

  private initializeTransporter() {
    const smtpHost = this.configService.getOrThrow('SMTP_HOST');
    const smtpPort = this.configService.getOrThrow('SMTP_PORT');
    const smtpUser = this.configService.getOrThrow('SMTP_USER');
    const smtpPass = this.configService.getOrThrow('SMTP_PASS');

    if (!smtpHost || !smtpPort || !smtpUser || !smtpPass) {
      this.logger.warn(
        'SMTP configuration is not complete. Email service will be disabled.',
      );
      return;
    }

    this.transporter = nodemailer.createTransport({
      host: smtpHost,
      port: smtpPort,
      secure: smtpPort === 465, // true for 465, false for other ports
      auth: {
        user: smtpUser,
        pass: smtpPass,
      },
      tls: {
        rejectUnauthorized: false, // For development only
      },
    });

    // Verify connection configuration
    this.transporter.verify((error) => {
      if (error) {
        this.logger.error('Email transporter verification failed:', error);
      } else {
        this.logger.log('Email transporter is ready to send messages');
      }
    });
  }

  private isEmailEnabled(): boolean {
    return !!this.transporter;
  }

  async sendEmail(options: EmailOptions): Promise<boolean> {
    if (!this.isEmailEnabled()) {
      this.logger.warn('Email service is disabled. Skipping email send.');
      return false;
    }

    try {
      const emailFrom = this.configService.getOrThrow('EMAIL_FROM');

      const info = await this.transporter.sendMail({
        from: emailFrom,
        to: options.to,
        subject: options.subject,
        html: options.html,
        text: options.text,
      });

      this.logger.log(
        `Email sent successfully to ${options.to}. Message ID: ${info.messageId}`,
      );
      return true;
    } catch (error) {
      this.logger.error(`Failed to send email to ${options.to}:`, error);
      return false;
    }
  }

  // Email Templates
  private getVerificationEmailTemplate(
    email: string,
    token: string,
  ): EmailTemplate {
    const subject = 'Verify your email';

    const html = `
      <!DOCTYPE html>
      <html lang="en">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Verify Email</title>
        <style>
          body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f8f9fa;
          }
          .container {
            background: white;
            padding: 40px;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.08);
            text-align: center;
          }
          .logo {
            width: 64px;
            height: 64px;
            background-color: #f3f4f6;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 24px;
            font-size: 24px;
          }
          .title {
            color: #111827;
            font-size: 28px;
            font-weight: 700;
            margin-bottom: 16px;
          }
          .description {
            color: #6b7280;
            font-size: 16px;
            margin-bottom: 32px;
            line-height: 1.5;
          }
          .email-highlight {
            color: #2563eb;
            font-weight: 600;
          }
          .verification-code {
            background: #f9fafb;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            padding: 24px;
            margin: 32px 0;
            font-size: 32px;
            font-weight: 700;
            letter-spacing: 8px;
            color: #111827;
            font-family: 'Courier New', monospace;
          }
          .expiry-note {
            color: #6b7280;
            font-size: 14px;
            margin-bottom: 32px;
          }
          .footer-note {
            color: #9ca3af;
            font-size: 14px;
            border-top: 1px solid #e5e7eb;
            padding-top: 24px;
            margin-top: 32px;
            line-height: 1.4;
          }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="logo">üìß</div>
          
          <h1 class="title">Verify your email</h1>
          
          <p class="description">
            We need to verify your email address <span class="email-highlight">${email}</span> before you can 
            access your account. Enter the code below in your open browser window.
          </p>
          
          <div class="verification-code">
            ${token}
          </div>
          
          <p class="expiry-note">
            This code expires in <strong>10 minutes</strong>.
          </p>
          
          <div class="footer-note">
            If you didn't sign up for Cursor, you can safely ignore this email. 
            Someone else might have typed your email address by mistake.
          </div>
        </div>
      </body>
      </html>
    `;

    const text = `
      Verify your email
      
      We need to verify your email address ${email} before you can access your account. 
      Enter the code below in your open browser window.
      
      Verification Code: ${token}
      
      This code expires in 10 minutes.
      
      If you didn't sign up for Cursor, you can safely ignore this email. 
      Someone else might have typed your email address by mistake.
    `;

    return { subject, html, text };
  }

  private getPasswordResetEmailTemplate(
    email: string,
    token: string,
  ): EmailTemplate {
    const frontendUrl = this.configService.getOrThrow('FRONTEND_URL');
    const resetUrl = `${frontendUrl}/auth/reset-password?token=${token}`;

    const subject = 'ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u c·ªßa b·∫°n';

    const html = `
      <!DOCTYPE html>
      <html lang="vi">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>ƒê·∫∑t l·∫°i M·∫≠t kh·∫©u</title>
        <style>
          body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f4f4f4;
          }
          .container {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
          }
          .header {
            text-align: center;
            margin-bottom: 30px;
          }
          .logo {
            font-size: 24px;
            font-weight: bold;
            color: #dc2626;
            margin-bottom: 10px;
          }
          .title {
            color: #1f2937;
            font-size: 20px;
            margin-bottom: 20px;
          }
          .content {
            margin-bottom: 30px;
          }
          .button {
            display: inline-block;
            background-color: #dc2626;
            color: white;
            padding: 12px 30px;
            text-decoration: none;
            border-radius: 5px;
            font-weight: bold;
            margin: 20px 0;
          }
          .button:hover {
            background-color: #b91c1c;
          }
          .footer {
            margin-top: 30px;
            padding-top: 20px;
            border-top: 1px solid #e5e7eb;
            font-size: 14px;
            color: #6b7280;
            text-align: center;
          }
          .warning {
            background-color: #fef2f2;
            border: 1px solid #f87171;
            border-radius: 5px;
            padding: 15px;
            margin: 20px 0;
          }
          .security-tip {
            background-color: #f0f9ff;
            border: 1px solid #0ea5e9;
            border-radius: 5px;
            padding: 15px;
            margin: 20px 0;
          }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <div class="logo">üîí NestJS App</div>
            <h1 class="title">ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u c·ªßa b·∫°n</h1>
          </div>
          
          <div class="content">
            <p>Xin ch√†o,</p>
            <p>Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n. N·∫øu b·∫°n ƒë√£ y√™u c·∫ßu ƒëi·ªÅu n√†y, vui l√≤ng nh·∫•p v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u:</p>
            
            <div style="text-align: center;">
              <a href="${resetUrl}" class="button">ƒê·∫∑t l·∫°i M·∫≠t kh·∫©u</a>
            </div>
            
            <p>Ho·∫∑c b·∫°n c√≥ th·ªÉ sao ch√©p v√† d√°n li√™n k·∫øt sau v√†o tr√¨nh duy·ªát:</p>
            <p style="word-break: break-all; background-color: #f3f4f6; padding: 10px; border-radius: 5px;">
              ${resetUrl}
            </p>
            
            <div class="warning">
              <strong>‚ö†Ô∏è Quan tr·ªçng:</strong> Li√™n k·∫øt n√†y s·∫Ω h·∫øt h·∫°n sau 1 gi·ªù v√¨ l√Ω do b·∫£o m·∫≠t.
            </div>
            
            <div class="security-tip">
              <strong>üí° L·ªùi khuy√™n b·∫£o m·∫≠t:</strong>
              <ul>
                <li>Ch·ªçn m·∫≠t kh·∫©u m·∫°nh c√≥ √≠t nh·∫•t 8 k√Ω t·ª±</li>
                <li>K·∫øt h·ª£p ch·ªØ hoa, ch·ªØ th∆∞·ªùng, s·ªë v√† k√Ω t·ª± ƒë·∫∑c bi·ªát</li>
                <li>Kh√¥ng s·ª≠ d·ª•ng th√¥ng tin c√° nh√¢n d·ªÖ ƒëo√°n</li>
                <li>Kh√¥ng chia s·∫ª m·∫≠t kh·∫©u v·ªõi ai kh√°c</li>
              </ul>
            </div>
          </div>
          
          <div class="footer">
            <p><strong>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y v√† m·∫≠t kh·∫©u c·ªßa b·∫°n s·∫Ω kh√¥ng thay ƒë·ªïi.</strong></p>
            <p>¬© 2024 NestJS App. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
          </div>
        </div>
      </body>
      </html>
    `;

    const text = `
      ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u c·ªßa b·∫°n
      
      Xin ch√†o,
      
      Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n. N·∫øu b·∫°n ƒë√£ y√™u c·∫ßu ƒëi·ªÅu n√†y, vui l√≤ng truy c·∫≠p li√™n k·∫øt sau ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u:
      
      ${resetUrl}
      
      Li√™n k·∫øt n√†y s·∫Ω h·∫øt h·∫°n sau 1 gi·ªù v√¨ l√Ω do b·∫£o m·∫≠t.
      
      L·ªùi khuy√™n b·∫£o m·∫≠t:
      - Ch·ªçn m·∫≠t kh·∫©u m·∫°nh c√≥ √≠t nh·∫•t 8 k√Ω t·ª±
      - K·∫øt h·ª£p ch·ªØ hoa, ch·ªØ th∆∞·ªùng, s·ªë v√† k√Ω t·ª± ƒë·∫∑c bi·ªát
      - Kh√¥ng s·ª≠ d·ª•ng th√¥ng tin c√° nh√¢n d·ªÖ ƒëo√°n
      - Kh√¥ng chia s·∫ª m·∫≠t kh·∫©u v·ªõi ai kh√°c
      
      N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y v√† m·∫≠t kh·∫©u c·ªßa b·∫°n s·∫Ω kh√¥ng thay ƒë·ªïi.
      
      ¬© 2024 NestJS App
    `;

    return { subject, html, text };
  }

  private getWelcomeEmailTemplate(name: string): EmailTemplate {
    const frontendUrl = this.configService.getOrThrow('FRONTEND_URL');
    const dashboardUrl = `${frontendUrl}/dashboard`;

    const subject = `Ch√†o m·ª´ng ${name} ƒë·∫øn v·ªõi NestJS App!`;

    const html = `
      <!DOCTYPE html>
      <html lang="vi">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Ch√†o m·ª´ng</title>
        <style>
          body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f4f4f4;
          }
          .container {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
          }
          .header {
            text-align: center;
            margin-bottom: 30px;
          }
          .logo {
            font-size: 24px;
            font-weight: bold;
            color: #059669;
            margin-bottom: 10px;
          }
          .title {
            color: #1f2937;
            font-size: 20px;
            margin-bottom: 20px;
          }
          .content {
            margin-bottom: 30px;
          }
          .button {
            display: inline-block;
            background-color: #059669;
            color: white;
            padding: 12px 30px;
            text-decoration: none;
            border-radius: 5px;
            font-weight: bold;
            margin: 20px 0;
          }
          .button:hover {
            background-color: #047857;
          }
          .footer {
            margin-top: 30px;
            padding-top: 20px;
            border-top: 1px solid #e5e7eb;
            font-size: 14px;
            color: #6b7280;
            text-align: center;
          }
          .features {
            background-color: #f0fdf4;
            border: 1px solid #22c55e;
            border-radius: 5px;
            padding: 20px;
            margin: 20px 0;
          }
          .feature-list {
            list-style: none;
            padding: 0;
          }
          .feature-list li {
            padding: 5px 0;
            border-bottom: 1px solid #e5e7eb;
          }
          .feature-list li:last-child {
            border-bottom: none;
          }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <div class="logo">üéâ NestJS App</div>
            <h1 class="title">Ch√†o m·ª´ng ${name}!</h1>
          </div>
          
          <div class="content">
            <p>Xin ch√†o ${name},</p>
            <p>Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi NestJS App! T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng v√† email ƒë√£ ƒë∆∞·ª£c x√°c th·ª±c.</p>
            
            <div class="features">
              <h3>üöÄ Nh·ªØng g√¨ b·∫°n c√≥ th·ªÉ l√†m:</h3>
              <ul class="feature-list">
                <li>‚úÖ Qu·∫£n l√Ω th√¥ng tin c√° nh√¢n</li>
                <li>‚úÖ B·∫≠t t√≠nh nƒÉng x√°c th·ª±c 2 y·∫øu t·ªë (2FA)</li>
                <li>‚úÖ Qu·∫£n l√Ω phi√™n ƒëƒÉng nh·∫≠p</li>
                <li>‚úÖ Thay ƒë·ªïi m·∫≠t kh·∫©u</li>
                <li>‚úÖ K·∫øt n·ªëi v·ªõi Google/Facebook</li>
              </ul>
            </div>
            
            <div style="text-align: center;">
              <a href="${dashboardUrl}" class="button">Kh√°m ph√° Dashboard</a>
            </div>
            
            <p>N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o, ƒë·ª´ng ng·∫ßn ng·∫°i li√™n h·ªá v·ªõi ch√∫ng t√¥i.</p>
          </div>
          
          <div class="footer">
            <p>C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng v√† s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa ch√∫ng t√¥i!</p>
            <p>¬© 2024 NestJS App. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
          </div>
        </div>
      </body>
      </html>
    `;

    const text = `
      Ch√†o m·ª´ng ${name}!
      
      Xin ch√†o ${name},
      
      Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi NestJS App! T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng v√† email ƒë√£ ƒë∆∞·ª£c x√°c th·ª±c.
      
      Nh·ªØng g√¨ b·∫°n c√≥ th·ªÉ l√†m:
      - Qu·∫£n l√Ω th√¥ng tin c√° nh√¢n
      - B·∫≠t t√≠nh nƒÉng x√°c th·ª±c 2 y·∫øu t·ªë (2FA)
      - Qu·∫£n l√Ω phi√™n ƒëƒÉng nh·∫≠p
      - Thay ƒë·ªïi m·∫≠t kh·∫©u
      - K·∫øt n·ªëi v·ªõi Google/Facebook
      
      Kh√°m ph√° Dashboard: ${dashboardUrl}
      
      N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o, ƒë·ª´ng ng·∫ßn ng·∫°i li√™n h·ªá v·ªõi ch√∫ng t√¥i.
      
      C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng v√† s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa ch√∫ng t√¥i!
      
      ¬© 2024 NestJS App
    `;

    return { subject, html, text };
  }

  // Public methods for sending specific emails
  async sendVerificationEmail(email: string, token: string): Promise<boolean> {
    const template = this.getVerificationEmailTemplate(email, token);
    return this.sendEmail({
      to: email,
      subject: template.subject,
      html: template.html,
      text: template.text,
    });
  }

  async sendPasswordResetEmail(email: string, token: string): Promise<boolean> {
    const template = this.getPasswordResetEmailTemplate(email, token);
    return this.sendEmail({
      to: email,
      subject: template.subject,
      html: template.html,
      text: template.text,
    });
  }

  async sendWelcomeEmail(name: string, email: string): Promise<boolean> {
    const template = this.getWelcomeEmailTemplate(name);
    return this.sendEmail({
      to: email,
      subject: template.subject,
      html: template.html,
      text: template.text,
    });
  }

  // Test email functionality
  async sendTestEmail(to: string): Promise<boolean> {
    const template = {
      subject: 'Test Email t·ª´ NestJS App',
      html: `
        <h1>üß™ Email Test Th√†nh C√¥ng!</h1>
        <p>N·∫øu b·∫°n nh·∫≠n ƒë∆∞·ª£c email n√†y, nghƒ©a l√† email service ƒëang ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng.</p>
        <p><strong>Th·ªùi gian g·ª≠i:</strong> ${new Date().toLocaleString('vi-VN')}</p>
      `,
      text: `Email Test Th√†nh C√¥ng! N·∫øu b·∫°n nh·∫≠n ƒë∆∞·ª£c email n√†y, nghƒ©a l√† email service ƒëang ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng. Th·ªùi gian g·ª≠i: ${new Date().toLocaleString('vi-VN')}`,
    };

    return this.sendEmail({
      to,
      subject: template.subject,
      html: template.html,
      text: template.text,
    });
  }
}
